#
# DO NOT MODIFY
# Automatically generated by jaxb2ruby v<%= VERSION %> (https://github.com/sshaw/jaxb2ruby)
#

require "roxml"
require "ddex/element"

<%- @class.requires.each do |mod| -%>
require "<%= mod %>"
<%- end -%>

<%= @class.module.map { |mod| "module #{mod}" }.join " " %>  # :nodoc: all

class <%= @class.name %> < <%= @class.superclass || "Element" %>
  include ROXML

  <%- if @class.element.root? -%>
    setns "<%= @class.element.namespace.prefix %>", "<%= @class.element.namespace.name %>"
  <%- end -%>

  xml_name "<%= @class.element.name %>"

  <%- @class.element.children.each do |e| -%>
    <%- if e.array? -%>
      <%# ROXML doesn't like String or Object as an argument to :as ?! %>
      xml_accessor :<%= e.accessor %>, :as => [<%= e.type unless %w[String Object].include?(e.type) %>], :from => "<%= e.name %>", :required => <%= e.required? %>

    <%- elsif e.hash? -%>
      xml_accessor :<%= e.accessor %>, :as => {}, :from => "<%= e.name %>", :required => <%= e.required? %>

    <%- elsif [:ID, :IDREF, :boolean, "String", "Object"].include?(e.type) -%>
      xml_accessor :<%= e.accessor %>, :from => "<%= e.name %>", :required => <%= e.required? %>

    <%- else -%>
      xml_accessor :<%= e.accessor %>, :as => <%= e.type %>, :from => "<%= e.name %>", :required => <%= e.required? %>

    <%- end -%>
  <%- end -%>

  <%- if @class.element.text? -%>
    xml_accessor :value, :from => ".", :required => <%= @class.element.required? %>
  <%- end -%>

  <% @class.element.attributes.each do |attr| %>
    <%- if [:boolean, "String", "Object"].include?(attr.type) -%>
      xml_accessor :<%= attr.accessor %>, :from => "@<%= attr.name %>", :required => <%= attr.required? %>
    <% else %>
      xml_accessor :<%= attr.accessor %>, :as => <%= attr.type %>, :from => "@<%= attr.name %>", :required => <%= attr.required? %>
    <% end %>
  <% end %>

  <%- if @class.element.root? && @class.element.name == "NewReleaseMessage" -%>
    alias :_message_schema_version_id :message_schema_version_id
    private :_message_schema_version_id

    def message_schema_version_id
      _message_schema_version_id || <%= @class.module.to_a[0..-2].join("::") %>.config["<%= @class.module.to_a[-1] %>"][:message_schema_version_id]
    end
  <%- end -%>
end

<%= @class.module.map { "end" }.join " " %>
